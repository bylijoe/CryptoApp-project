name: Publish CryptoAPI

on:
  workflow_run:
    workflows:
      - "CI Python"
    branches: [ main ]
    types:
      - completed

env:
  python_version: 3.9
  # Variables used to configure
  REGISTRY: ghcr.io
  REPOSITORY: bylijoe/CryptoApp-project

permissions:
  contents: write
  packages: write

jobs:

  publish_release:
    if: ${{ github.event.workflow_run.conclusion == 'success'  }}

    runs-on: ubuntu-latest
    steps:
      # (Optional) GitHub Enterprise requires GHE_HOST variable set
      #- name: Set GHE_HOST
      #  run: |
      #    echo "GHE_HOST=${GITHUB_SERVER_URL##https:\/\/}" >> $GITHUB_ENV

      # Drafts your next Release notes as Pull Requests are merged into "master"
      - uses: release-drafter/release-drafter@v5
        # (Optional) specify config name to use, relative to .github/. Default: release-drafter.yml
        with:
          publish: true
        #   config-name: my-config.yml
          disable-autolabeler: false
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

  docker_publish:
    # REF:  https://docs.github.com/en/actions/publishing-packages/publishing-docker-images
    name: Build & Publish Image
    needs: publish_release
    runs-on: ubuntu-latest
    steps:
      - name: Download code
        uses: actions/checkout@v3
        
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - uses: actions-ecosystem/action-get-latest-tag@v1
        id: get-latest-tag
      - name: Get the version
        id: get_version
        run: |
          VERSION_TAG=${{ steps.get-latest-tag.outputs.tag }}
          echo ::set-output name=VERSION::${VERSION_TAG/v/}

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.PAT }}
      
      - name: Login to GHCR
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor}} --password-stdin
      
      - name: Build and push into ghcr.io
        uses: docker/build-push-action@v2
        id: docker_build
        with:
          load: false
          pull: false
          push: true    
          tags: ${{ env.REGISTRY }}/${{ env.REPOSITORY  }}:${{ steps.get_version.outputs.version }}
